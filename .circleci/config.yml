version: 2

jobs:
    dependencies:
      docker:
        - image: circleci/openjdk:8
      steps:
        - checkout
        - restore_cache:
                    keys:
                      - v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
                      - v2-gradle-deps
        - run: ./gradlew downloadDependencies
        - save_cache:
                    key: v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
                    paths:
                      - .gradle
                      - ~/.gradle
                      - ~/.m2

    test:
      docker:
        - image: circleci/openjdk:8
      steps:
        - checkout
        - restore_cache:
            keys:
              - v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
              - v2-gradle-deps
        - run: ./gradlew test

    build:
      docker:
        - image: circleci/openjdk:8
      environment:
        ENVIRONMENT: "master"
      steps:
        - checkout
        - restore_cache:
            keys:
              - v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
              - v2-gradle-deps
        - save_cache:
            key: v2-built-jar-{{ .Branch }}-{{ .Revision }}
            paths:
              - grassroot-webapp/build

    deploy_production:
      docker:
        - image: circleci/openjdk:8
          auth:
            username: $DOCKER_USER
            password: $DOCKER_PASS
      environment:
                ENVIRONMENT: "production"
                EBENVIRONMENT: "gr-msg-prod"
      steps:
        - checkout
        - restore_cache:
            keys:
              - v2-built-jar-{{ .Branch }}-{{ .Revision }}
        - setup_remote_docker:
            docker_layer_caching: true
        - run:
            name: Install AWS tools
            command: |
                    sudo apt-get update && sudo apt-get install python && sudo apt-get install python-pip && sudo apt-get install python-dev
                    pip install awscli --upgrade --user
                    pip install awsebcli --upgrade --user
        - run:
            name: Build & push Docker image
            command: |
                  mv .deploy/buildimage.sh buildimage.sh
                  chmod +x buildimage.sh
                  ./buildimage.sh $CIRCLE_SHA1 $ENVIRONMENT
        - run:
            name: Trigger EB update
            command: |
                  mv .deploy/ebdeploy.sh ebdeploy.sh
                  chmod +x ebdeploy.sh
                  ./ebdeploy.sh $CIRCLE_SHA1 $ENVIRONMENT $EBENVIRONMENT

