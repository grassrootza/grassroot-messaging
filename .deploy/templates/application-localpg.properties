DATABASE_URL=jdbc:postgresql://localhost:5432/grassroot?user=grassroot&password=verylongpassword
spring.datasource.url=jdbc:postgresql://localhost:5432/grassroot
spring.datasource.username=grassroot
spring.datasource.password=verylongpassword
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.show_sql=false
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.springframework.web.client.RestTemplate=INFO
logging.level.org.springframework.integration=INFO

# grassroot core is putting spring security on the class path, which messes with
# the microservice communication, hence putting this here, but interceptor remains
security.ignored=/**

# we usually run the main platform on 8080, hence
server.port=8081

grassroot.messaging.properties.path =/usr/src/grassroot-msg/environment/grassroot-integration.properties
grassroot.aws.sms.enabled           =true
grassroot.sms.sending.awsdefault    =false
grassroot.aws.test.topic            =${AWS_TEST_ARN:aws-test-topic}
grassroot.aws.test.subscribe        =false

grassroot.gcm.enabled               =false
grassroot.gcm.debugging.enabled     =false

grassroot.metrics.enabled           =false

grassroot.service.key.urls          =https://grassroot.org.za/api/jwt/public/credentials
unsuccessful.notifications.handler.cron=0 0/5 8-20 * * ?

grassroot.smsfetcher.enabled        =false
grassroot.callbackq.enabled         =true
grassroot.callbackq.interval        =10000
grassroot.callbackq.ratepersecond   =1
grassroot.callbackq.queue.name      =sms-delivery-receipts
grassroot.callbackq.queue.deadl     =callback-dead-letter

# use FakeSMTP to test safely locally
grassroot.email.enabled             =true
spring.mail.host                    =localhost
spring.mail.port                    =2525
spring.mail.username                =notifications@localhost
spring.mail.password                =test
spring.mail.properties.mail.smtp.starttls.required=false
