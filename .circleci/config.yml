# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details ##
#

version: 2

jobs:
  buildjob:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test

  dependenciesjob:
    docker:
      # specify the version you desire here
      - image: circleci/python:latest
    steps:
      - run:
          name: Installing deployment dependencies
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip
      - run:
          name: Setup AWS CLI
          command: sudo pip install awscli
      - run:
          name: Setup AWS EB CLI
          command: sudo pip install awsebcli
      - run:
          name: Setup AWS permissions
          command: sudo aws configure set profile.default.s3.signature_version s3v4

  deploymentprodjob:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    steps:
      - run:
          name: define environment
          command: |
            echo 'export ENVIRONMENT=production' >> ~/.circlerc
            echo 'export EBENVIRONMENT=gr-prod' >> ~/.circlerc
            echo $ENVIRONMENT
      - run:
          name: build image and deploy to docker hub
          command: |
            mv .deploy/buildimage.sh buildimage.sh
            chmod +x buildimage.sh
            ./buildimage.sh $CIRCLE_SHA1 $ENVIRONMENT
      - run:
          name: deploy files to beanstalk
          command: |
            mv .deploy/ebdeploy.sh ebdeploy.sh
            chmod +x ebdeploy.sh
            ./ebdeploy.sh $CIRCLE_SHA1 $ENVIRONMENT $EBENVIRONMENT

  deploymentstgjob:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    steps:
      - run:
          name: define environment
          command: |
            echo 'export ENVIRONMENT=staging' >> ~/.circlerc
            echo 'export EBENVIRONMENT=gr-stg' >> ~/.circlerc
            echo $ENVIRONMENT
      - run:
          name: build image and deploy to docker hub
          command: |
            mv .deploy/buildimage.sh buildimage.sh
            chmod +x buildimage.sh
            ./buildimage.sh $CIRCLE_SHA1 $ENVIRONMENT
      - run:
          name: deploy files to beanstalk
          command: |
            mv .deploy/ebdeploy.sh ebdeploy.sh
            chmod +x ebdeploy.sh
            ./ebdeploy.sh $CIRCLE_SHA1 $ENVIRONMENT $EBENVIRONMENT
workflows:
  version: 2
  build_and_test:
    jobs:
      - buildjob
      - dependenciesjob
      - deploymentprodjob:
          filters:
            branches:
              only:
                - master
          requires:
            - buildjob
            - dependenciesjob

      # DEPLOY TO STAGING
      - deploymentstgjob:
          filters:
            branches:
              only:
                - preprod
          requires:
            - buildjob
            - dependenciesjob
